* Cricket Introduction
* Coherent Noise
* API
** Generators
*** [#B] Perlin
**** perlin-1d
***** Parameter List
***** Description
***** Example
**** perlin-2d
***** Parameter List
***** Description
***** Example
**** perlin-3d
***** Parameter List
***** Description
***** Example
**** perlin-4d
***** Parameter List
***** Description
***** Example
*** Simplex
**** simplex-1d
***** Parameter List
***** Description
***** Example
**** simplex-2d
***** Parameter List
***** Description
***** Example
**** simplex-3d
***** Parameter List
***** Description
***** Example
**** simplex-4d
***** Parameter List
***** Description
***** Example
*** Open-Simplex
**** open-simplex-2d
***** Parameter List
***** Description
***** Example
**** open-simplex-3d
***** Parameter List
***** Description
***** Example
**** open-simplex-4d
***** Parameter List
***** Description
***** Example
**** open-simplex2f-2d
***** Parameter List
***** Description
***** Example
**** open-simplex2f-3d
***** Parameter List
***** Description
***** Example
**** open-simplex2f-4d
***** Parameter List
***** Description
***** Example
**** open-simplex2s-2d
***** Parameter List
***** Description
***** Example
**** open-simplex2s-3d
***** Parameter List
***** Description
***** Example
**** open-simplex2s-4d
***** Parameter List
***** Description
***** Example
*** Value
**** value-2d
***** Parameter List
***** Description
***** Example
**** value-3d
***** Parameter List
***** Description
***** Example
*** Cellular
**** cellular-2d
***** Parameter List
***** Description
***** Example
**** cellular-3d
***** Parameter List
***** Description
***** Example
*** Cylinders
**** cylinders-3d
***** Parameter List
***** Description
***** Example
*** Spheres
**** spheres-3d
***** Parameter List
***** Description
***** Example
*** Checker
**** checker-2d
***** Parameter List
***** Description
***** Example
*** Constant
**** constant
***** Parameter List
***** Description
***** Example
*** FBM: Fractal Brownian Motion
**** fbm-2d
***** Parameter List
***** Description
***** Example
**** fbm-3d
***** Parameter List
***** Description
***** Example
**** fbm-4d
***** Parameter List
***** Description
***** Example
*** Billow
**** billow-2d
***** Parameter List
***** Description
***** Example
**** billow-3d
***** Parameter List
***** Description
***** Example
**** billow-4d
***** Parameter List
***** Description
***** Example
*** Multifractal
**** multifractal-2d
***** Parameter List
***** Description
***** Example
**** multifractal-3d
***** Parameter List
***** Description
***** Example
**** multifractal-4d
***** Parameter List
***** Description
***** Example
*** Hybrid-Multifractal
**** hybrid-multifractal-2d
***** Parameter List
***** Description
***** Example
**** hybrid-multifractal-3d
***** Parameter List
***** Description
***** Example
**** hybrid-multifractal-4d
***** Parameter List
***** Description
***** Example
*** Ridged-Multifractal
**** ridged-multifractal-2d
***** Parameter List
***** Description
***** Example
**** ridged-multifractal-3d
***** Parameter List
***** Description
***** Example
**** ridged-multifractal-4d
***** Parameter List
***** Description
***** Example
** Modifiers
*** +
**** Parameter List
**** Description
**** Example
*** -
**** Parameter List
**** Description
**** Example
*** *
**** Parameter List
**** Description
**** Example
*** /
**** Parameter List
**** Description
**** Example
*** abs
**** Parameter List
**** Description
**** Example
*** blend
**** Parameter List
**** Description
**** Example
*** cache
**** Parameter List
**** Description
**** Example
*** clamp
**** Parameter List
**** Description
**** Example
*** curve
**** Parameter List
**** Description
**** Example
*** displace
**** Parameter List
**** Description
**** Example
*** expt
**** Parameter List
**** Description
**** Example
*** fractalize
**** Parameter List
**** Description
**** Example
*** max
**** Parameter List
**** Description
**** Example
*** negate
**** Parameter List
**** Description
**** Example
*** power
**** Parameter List
**** Description
**** Example
*** rotate
**** Parameter List
**** Description
**** Example
*** scale
**** Parameter List
**** Description
**** Example
*** select
**** Parameter List
**** Description
**** Example
*** strengthen
**** Parameter List
**** Description
**** Example
*** terrace
**** Parameter List
**** Description
**** Example
*** translate
**** Parameter List
**** Description
**** Example
*** turbulance
**** Parameter List
**** Description
**** Example
*** uniform-scale
**** Parameter List
**** Description
**** Example
** Map
*** define-gradient
*** get-image-pixel
*** image
**** image-height
**** image-width
**** image-data
*** make-map
**** map-data
**** map-height
**** map-value
**** map-width
*** render-map
*** write-image
* Glossary
* References
* Prototyping
Remove this entire section when the org more docs are complete.
** Org Mode Code Block Examples
This is an example of how to configure org-mode so that when I execute
a block of common lisp the image it generates is places realtime inlined
into the org document as appropriate.

#+BEGIN_SRC shell :results output silent
echo "Hello world"
#+END_SRC

#+BEGIN_SRC lisp :results output silent
(ql:quickload :cricket)
(defpackage #:my-package
  (:local-nicknames (#:c #:cricket))
  (:use #:cl))
(in-package #:my-package) ;; <- doesn't affect repl!
#+END_SRC

#+BEGIN_SRC lisp :var arg="/tmp/proto-0.png" :post namestring(path=*this*) :results file drawer
(c:-> (c:checker-2d :seed "example")
  ;;(c:uniform-scale 1/4)
  (c:fractalize :fbm :octaves 3)
  (c:make-map :width 128 :height 128)
  (c:render-map)
  (c:write-image arg))
#+END_SRC

#+RESULTS:
:results:
[[file:/tmp/proto-0.png]]
:end:

Example text.

#+BEGIN_SRC lisp :var arg="/tmp/proto-1.png" :post namestring(path=*this*) :results file drawer
(c:-> (c:perlin-3d :seed "example")
  (c:uniform-scale 1.5)
  (c:fractalize :fbm :frequency 1.3 :octaves 6 :lacunarity 3 :persistence 0.22)
  (c:turbulence (c:open-simplex-3d :seed "foo") :power 1.2 :roughness 4)
  (c:make-map :width 128 :height 128)
  (c:render-map :gradient :terrain)
  (c:write-image arg))
#+END_SRC

#+RESULTS:
:results:
[[file:/tmp/proto-1.png]]
:end:

** Org Mode Wisdom
*** [[https://www.gnu.org/software/emacs/refcards/pdf/orgcard.pdf]]
*** [[https://orgmode.org/worg/orgcard.html]]
*** [[https://orgmode.org/manual/Variable-Index.html]]
*** C-c C-x C-v - org-toggle-inline-images
Used to toggle all inline images on and off.
*** C-c C-v b - org-babel-execute-buffer.
Execute all code blocks in the buffer and update the results.
Must usually

* Org Mode Utilities
The following utility is a post processor to convert the pathname output of
C:WRITE-IMAGE which has then been flatted into a string by org mode--with
the #P included, into a string of just the filename. This is a pure
hack that suffices for this one use case. To support C-c C-v b for
recomputing all images, we check path to ensure it is valid.
#+NAME: namestring
#+BEGIN_SRC lisp :var path="" :results output
;; The 'path' will be the STRING "#P/some/path/name" so I'll extracct out
;; the portion I need as the file name. Used to post process ends of
;; examples that have WRITE-IMAGE at the end.
(format t "~A"
        ;; TODO: convert to COND, make more precise in how it fails and what
        ;; it accepts. Maybe make some more static images to indicate the
        ;; failure condition.
        (if (and path
                 (vectorp path)
                 (> (length path) 2)
                 (string= (subseq path 0 2) "#P"))
            (subseq (namestring path) 2)
            "img/static/broken.png"))
#+END_SRC

#+RESULTS: namestring
: img/static/broken.png
